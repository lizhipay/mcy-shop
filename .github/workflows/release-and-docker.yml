name: Release & Docker Publish

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

env:
  IMAGE_DH: ${{ secrets.DOCKER_USERNAME }}/mcy-shop
  IMAGE_GHCR: ghcr.io/${{ github.repository_owner }}/mcy-shop

jobs:
  release-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code (full history + tags)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0     
          fetch-tags: true   

      - name: Set version
        id: vars
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Create ZIP package
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          ZIP_NAME="mcy-shop_${VERSION}.zip"
          zip -r "$ZIP_NAME" . \
            -x ".git/*" \
            -x ".github/*" \
            -x "rootfs/*" \
            -x "docs/*" 
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
    

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.vars.outputs.VERSION }}
          files: ${{ env.ZIP_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
          push: true
          tags: |
            ${{ env.IMAGE_DH }}:${{ steps.vars.outputs.VERSION }}
            ${{ env.IMAGE_DH }}:latest
            ${{ env.IMAGE_GHCR }}:${{ steps.vars.outputs.VERSION }}
            ${{ env.IMAGE_GHCR }}:latest
          build-args: |
            EASYIMAGES_VERSION=${{ steps.vars.outputs.VERSION }}